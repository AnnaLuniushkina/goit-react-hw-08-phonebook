{"version":3,"file":"static/js/347.4ced865d.chunk.js","mappings":"qOACA,EAA6B,8BAA7B,EAAwE,8BAAxE,EAAkH,6BAAlH,EAA4J,8BAA5J,EAAwM,+B,SCKzL,SAASA,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACpC,OAAQD,GACJ,IAAK,QACD,OAAOL,EAASM,GACpB,IAAK,WACD,OAAOJ,EAAYI,GACvB,QACI,SAWZ,OACI,iBAAKC,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,oGAEA,kBAAMD,UAAWC,EAAaC,SAXjB,SAAAC,GACjBA,EAAMC,iBACNf,EAASgB,EAAAA,EAAAA,MAAqB,CAAEb,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,KAO8CW,aAAa,KAAnE,WACI,sCAEI,kBACIN,UAAWC,EACXM,KAAK,QACLT,KAAK,QACLC,MAAOP,EACPgB,SAAUZ,QAIlB,yCAEI,kBACII,UAAWC,EACXM,KAAK,WACLT,KAAK,WACLC,MAAOL,EACPc,SAAUZ,QAIlB,mBAAQI,UAAWC,EAAeM,KAAK,SAAvC","sources":["webpack://goit-react-hw-08-phonebook/./src/views/LoginView.module.css?dd24","views/LoginView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginBlock\":\"LoginView_loginBlock__S8iue\",\"loginTitle\":\"LoginView_loginTitle__V57cq\",\"loginForm\":\"LoginView_loginForm__I2w-p\",\"loginInput\":\"LoginView_loginInput__Z7h+R\",\"loginButton\":\"LoginView_loginButton__UeXBJ\"};","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport authOperations from '../redux/auth/auth-operations';\nimport s from './LoginView.module.css';\n\nexport default function LoginView() {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        dispatch(authOperations.logIn({ email, password }));\n        setEmail('');\n        setPassword('');\n    };\n\n    return (\n        <div className={s.loginBlock}>\n            <h1 className={s.loginTitle}>Сторінка логіна</h1>\n\n            <form className={s.loginForm} onSubmit={handleSubmit} autoComplete=\"on\">\n                <label>\n                    Email\n                    <input\n                        className={s.loginInput}\n                        type='email'\n                        name='email'\n                        value={email}\n                        onChange={handleChange}\n                    />\n                </label>\n\n                <label>\n                    Password\n                    <input\n                        className={s.loginInput}\n                        type='password'\n                        name='password'\n                        value={password}\n                        onChange={handleChange}\n                    />\n                </label>\n\n                <button className={s.loginButton} type=\"submit\">LogIn</button>\n            </form>\n        </div>\n    );\n}"],"names":["LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","className","s","onSubmit","event","preventDefault","authOperations","autoComplete","type","onChange"],"sourceRoot":""}