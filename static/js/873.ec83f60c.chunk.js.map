{"version":3,"file":"static/js/873.ec83f60c.chunk.js","mappings":"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","sources":["redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/FilterContact/FilterContact.module.css?d984","components/FilterContact/FilterContact.jsx","webpack://goit-react-hw-08-phonebook/./src/views/ContactsView.module.css?b229","views/ContactsView.jsx"],"sourcesContent":["import axios from 'axios';\nimport {\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n} from './contacts-actions';\n\n// GET @ /contacts\nconst fetchContacts = () => async dispatch => {\n    dispatch(fetchContactsRequest());\n\n    try {\n        const { data } = await axios.get('/contacts');\n\n        dispatch(fetchContactsSuccess(data));\n    } catch (error) {\n        dispatch(fetchContactsError(error.message));\n    }\n};\n\n// POST @ /contacts\nconst addContact = ({ name, number }) =>\n    dispatch => {\n        const contact = {\n            name,\n            number,\n        };\n\n        dispatch(addContactRequest());\n\n        axios.post('/contacts', contact).then(({ data }) => dispatch(addContactSuccess(data))).catch(error => dispatch(addContactError(error.message)));\n    };\n\n// DELETE @ /contacts/:id\nconst deleteContact = contactId => dispatch => {\n    dispatch(deleteContactRequest());\n\n    axios\n        .delete(`/contacts/${contactId}`)\n        .then(() => dispatch(deleteContactSuccess(contactId)))\n        .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nconst contactsOperations = {\n    fetchContacts,\n    addContact,\n    deleteContact,\n};\n\nexport default contactsOperations;\n\n\n","export const getLoading = state => state.contacts.loading;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilteredContacts = state => {\n    const filter = getFilter(state).toLowerCase();\n    const contacts = getContacts(state);\n    return contacts\n        .filter(contact => {\n            return contact.name.toLowerCase().includes(filter);\n        })\n        .sort((a, b) => a.name.localeCompare(b.name));\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactForm__input\":\"ContactForm_contactForm__input__k3i+4\",\"contactForm__button\":\"ContactForm_contactForm__button__C3X5B\"};","import { useState } from 'react'; \nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport styles from './ContactForm.module.css';\n\nexport default function ContactForm() {\n    const  [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n\n    const handleChange = event => {  \n        switch (event.currentTarget.name) {\n            case 'name':\n                setName(event.currentTarget.value);\n                break;\n            case 'number':\n                setNumber(event.currentTarget.value);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        if (\n            contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n            alert(`${name} is already in contact`);\n        } else if (contacts.find(contact => contact.number === number)) {\n            alert(`${number} is already in contact`);\n        } else {\n            dispatch(contactsOperations.addContact({ name, number }));\n            setName('');\n            setNumber('');\n        }\n    };\n\n    return (\n            <form\n                className={styles.contactForm}\n                onSubmit={handleSubmit}>\n                <label\n                    className={styles.contactForm__label} >\n                    Name\n                    <input\n                        className={styles.contactForm__input}\n                        value={name}\n                        onChange={handleChange}\n                        type='text'\n                        name='name'\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required />\n                    </label>\n                \n                    <label\n                        className={styles.contactForm__label}>\n                        Number\n                        <input\n                            className={styles.contactForm__input}\n                            value={number}\n                            onChange={handleChange}\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                            required\n                        />\n                    </label>\n        \n                    <button type=\"submit\" className={styles.contactForm__button}>Add contact</button>\n                </form>\n        );\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactListItem_contactListItem__A4sXv\",\"contactListItem__button\":\"ContactListItem_contactListItem__button__K6c0x\"};","import PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nexport default function ContactListItem({ contact, onDelete }) {\n    const { id, name, number } = contact;\n    \n    return (\n        <li\n            className={styles.contactListItem}>\n            {name}: {number}\n\n        <button\n            className={styles.contactListItem__button}\n            type='button'\n            id={id}\n            onClick={event => onDelete(event.target.id)}\n        >\n            Delete\n        </button>\n    </li>\n    );\n};\n\nContactListItem.propTypes = {\n    contact: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }),\n    onDelete: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"ContactList\":\"ContactList_ContactList__2mXfy\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport styles from './ContactList.module.css';\n\nexport default function ContactList() {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getFilteredContacts);\n\n    const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\n\n    return (\n        <ul className={styles.ContactList}>\n            {contacts.map(({ id, name, number }) => {\n                return (\n                    <ContactListItem key={id} contact={{ id, name, number }} onDelete={() => onDeleteContact(id) } />\n                );\n            })}\n        </ul>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"filter__input\":\"FilterContact_filter__input__6mFoE\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/contacts-actions';\nimport styles from './FilterContact.module.css';\n\nexport default function FilterContact() {\n    const value = useSelector(state => state.contacts.filter);\n    const dispatch = useDispatch();\n\n    return (\n        <label className={styles.filter__label}>\n            <p></p>\n            <input\n                className={styles.filter__input}\n                type='text'\n                name='filter'\n                value={value}\n                onChange={event => dispatch(changeFilter(event.currentTarget.value))} />\n        </label>\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsView_container__-19yt\",\"addContactsPage\":\"ContactsView_addContactsPage__ccimd\",\"addContactsTitle\":\"ContactsView_addContactsTitle__7pG+-\",\"filter\":\"ContactsView_filter__zxK5T\",\"filterTitle\":\"ContactsView_filterTitle__Y5lUg\",\"loading\":\"ContactsView_loading__G51od\"};","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport contactsOperations from \"../redux/contacts/contacts-operations\";\nimport { getLoading } from \"../redux/contacts/contacts-selectors\";\n\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport FilterContact from \"components/FilterContact/FilterContact\";\n\nimport s from \"./ContactsView.module.css\";\n\nexport default function ContactsView() {\n    const dispatch = useDispatch();\n    const isLoadingContacts = useSelector(getLoading);\n\n    useEffect(() => {\n        dispatch(contactsOperations.fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <div className={s.container}>\n            <div className={s.addContactsPage}>\n                <h2 className={s.addContactsTitle}>Add new contact</h2>\n                <ContactForm />\n            </div>\n\n            {isLoadingContacts && <h1 className={s.loading}>Loading...</h1>}\n            \n            <div className={s.filter}>\n                <h3 className={s.filterTitle}>Find contact by name</h3>\n                <FilterContact />\n                <ContactList />\n            </div>\n        </div>\n    );\n}"],"names":["contactsOperations","fetchContacts","dispatch","fetchContactsRequest","axios","data","fetchContactsSuccess","fetchContactsError","message","addContact","name","number","contact","addContactRequest","then","addContactSuccess","catch","error","addContactError","deleteContact","contactId","deleteContactRequest","deleteContactSuccess","deleteContactError","getLoading","state","contacts","loading","getContacts","items","getFilteredContacts","filter","getFilter","toLowerCase","includes","sort","a","b","localeCompare","ContactForm","useState","setName","setNumber","useDispatch","useSelector","handleChange","event","currentTarget","value","className","styles","onSubmit","preventDefault","find","alert","onChange","type","pattern","title","required","ContactListItem","onDelete","id","onClick","target","ContactList","map","onDeleteContact","FilterContact","changeFilter","ContactsView","isLoadingContacts","useEffect","s"],"sourceRoot":""}